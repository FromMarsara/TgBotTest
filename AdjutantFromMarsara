import time
import requests

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, \
    ReplyKeyboardRemove
from aiogram.types.message import ContentType
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "6745277481:AAGOxuHkIJMppM3K1Y9bqnXrwqka7VpGz-I"  # –≤–∞—à —Ç–æ–∫–µ–Ω

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

KB1 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb1_1 = KeyboardButton("/help")
kb1_2 = KeyboardButton("/üå†")
kb1_3 = KeyboardButton("/üå§")
kb1_4 = KeyboardButton("/üê±")
KB1.add(kb1_1)
KB1.add(kb1_3).insert(kb1_2).insert(kb1_4)

KB3 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb3_1 = KeyboardButton("/go")
kb3_2 = KeyboardButton("/search")
KB3.add(kb3_1).add(kb3_2)

user_text = None


def gen_photo_url(word: str) -> str:
    return "https://yandex.ru/images/search?text=" + word


def gen_weather_outer(city):
    return "https://yandex.ru/weather/ru-RU/" + city + "/details"

def gen_photo_url(color):
    return "https://www.google.com/search?q=–∫–æ—à–∫–∞—Ñ" + color

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text= "–ê–¥—å—é—Ç–∞–Ω—Ç –≤–∫–ª—é—á—ë–Ω. –î–æ–±—Ä—ã–π –≤–µ—Å—á–µ—Ä, –º–∞–≥–∏—Å—Ç—Ä–∞—Ç. –ù–æ–≤–æ—Å—Ç–µ–π –æ—Ç –î–æ–º–∏–Ω–∏–æ–Ω–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∞–ª–æ. –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É...",
                           parse_mode="html",
                           reply_markup=KB1)
    await message.delete()


@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text= "–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É.....",
                           parse_mode="html",
                           reply_markup=KB1)
    await message.delete()

@dp.message_handler()
async def echo(message: types.Message):
    global user_text
    if message.text[0] != '/':
        user_text = message.text
    elif message.text == '/üå†':
        if user_text is None:
            await bot.send_message(chat_id=message.from_user.id,
                                   text="–≤—ã –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏")
        else:
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=gen_photo_url(user_text))
            await message.delete()
            user_text = None
    elif message.text == '/üå§':
        if user_text is None:
            await bot.send_message(chat_id=message.from_user.id,
                                   text="–≤—ã –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏")
        else:
            await bot.send_message(chat_id=message.from_user.id,
                                   text=gen_weather_outer(user_text))
            await message.delete()
            user_text = None
    elif message.text == '/üê±':
        if user_text is None:
            await bot.send_message(chat_id=message.from_user.id,
                                   text="–≤—ã –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏")
        else:
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=gen_photo_url(user_text))
            await message.delete()
            user_text = None

# –ø–æ—Å–ª–µ q= —Å–ª–æ–≤–æ

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=False)
