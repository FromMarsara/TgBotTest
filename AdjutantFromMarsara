from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, \
    ReplyKeyboardRemove
from aiogram.types.message import ContentType
from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = "6745277481:AAGOxuHkIJMppM3K1Y9bqnXrwqka7VpGz-I"

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

KB1 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb1_1 = KeyboardButton("/help")
kb1_2 = KeyboardButton("/hello")
KB1.add(kb1_1).insert(kb1_2)

KB3 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
kb3_1 = KeyboardButton("/go")
kb3_2 = KeyboardButton("/search")
KB3.add(kb3_1).add(kb3_2)


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await bot.send_message(chat_id=message.from_user.id,
                           text="""
Адъютант включён. Добрый вечер. Новостей от Доминиона не поступало. Можете продолжать работу..
""",
                           parse_mode="html",
                           reply_markup=KB1)
    await message.delete()

@dp.message_handler(commands=['country'])
async def send_welcome(message: types.Message):
    await bot.send_message(chat_id=message.from_user/id,
                           text=f"любой текст",
                           parse_mode="html")

    await bot.send_message(chat_id=message.from_user.id,
                           text="любой текст",
                           parse_mode="html",
                           replay_marcup=KB3)

@dp.message_handler()
async def echo(message: types.Message):
    tx = message.text
    await bot.send_photo(chat_id=message.from_usser.id,
                         photo=f"https://ya.ru/images/search?img_url=https%3A%2F%2Fcs12.pikabu.ru%2Fpost_img%2F2022%2F10%2F03%2F6%2Fog_og_1664787919293120323.jpg&lr=21623&pos=15&rpt=simage&source=serp&text=%D0%BC%D0%B0%D1%82%D1%8B%20%D1%8D%D1%82%D0%BE%20%D0%BF%D0%BB%D0%BE%D1%85%D0%BE%20%D0%BC%D0%B5%D0%BC%20%D1%81%20%D0%BA%D0%BE%D1%82%D1%8F%D1%82%D0%B0%D0%BC%D0%B8={tx}")
    

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=False)
